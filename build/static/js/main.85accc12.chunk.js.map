{"version":3,"sources":["components/Code.js","components/Problem.js","components/Spacer.js","context/AceContext.js","components/Ace.js","components/FileUpload.js","js/utils.js","js/languages.js","components/Editor.js","js/api.js","components/Workspace.js","components/ProblemSelect.js","pages/WorkspacePage.js","pages/IndexPage.js","pages/SharePage.js","pages/Knowme.js","App.js","index.js"],"names":["Code","value","className","textArray","ar","map","paragraph","i","Problem","problemStatement","createRef","this","componentDidUpdate","current","renderMathInElement","delimiters","left","right","display","problem","props","title","href","link","target","rel","icon","faExternalLinkAlt","timeLimit","memoryLimit","ref","statement","text","input","inputSpec","output","outputSpec","notes","length","sampleTests","Table","Component","Spacer","width","style","marginLeft","AceContext","createContext","theme","keyboardHandler","Ace","handleWidth","handleHeight","height","Consumer","aceProps","mode","fontSize","wrapEnabled","highlightActiveLine","setOptions","enableBasicAutocompletion","enableLiveAutocompletion","showPrintMargin","scrollPastEnd","editorProps","$blockScrolling","Infinity","FileUpload","upload","bind","handleChange","promise","Promise","resolve","reject","click","files","file","reader","FileReader","onload","event","result","readAsText","e","type","onChange","children","recentWorkspaces","localStorage","getItem","languages","50","name","template","54","62","71","72","Editor","state","settingsOpen","toggleSettings","handleLanguage","setState","language","code","Button","onClick","a","faUpload","onShare","faShareAlt","fileName","content","contentType","document","createElement","download","blob","Blob","window","URL","createObjectURL","faDownload","ButtonDropdown","isOpen","toggle","direction","DropdownToggle","faTools","DropdownMenu","Form","FormGroup","Label","for","Input","bsSize","id","Object","entries","onAceChange","disabled","working","onRun","faPlay","onTest","faCheck","onSubmit","faPaperPlane","api","axios","create","baseURL","judge","headers","process","sleep","ms","setTimeout","Workspace","testResults","tab","runCode","runTests","handleSubmit","handleShare","handleAceChange","tabs","post","source_code","solution","language_id","stdin","expected_output","resp","token","data","get","status","run","alert","JSON","stringify","response","testCases","Array","fill","all","index","then","slice","open","submitLink","Provider","sizes","minSize","gutterSize","TabContent","activeTab","TabPane","tabId","stdout","readOnly","stderr","compile_output","time","Math","floor","memory","description","hover","size","Nav","tabName","NavItem","NavLink","setTab","ProblemSelect","problemId","loading","preventDefault","autoFocus","placeholder","color","Spinner","defaultSolution","WorkspacePage","loadState","handleWorkspaceChange","workspaceSaveDebounced","debounce","workspaceSave","match","params","split","filter","s","includes","push","setItem","join","addWorkspace","history","put","snapOffset","IndexPage","recent","delete","obj","overflowY","workspace","Card","flexBasis","CardBody","CardTitle","CardSubtitle","moment","updatedAt","fromNow","CardText","to","remove","faTrashAlt","SharePage","useState","share","setShare","setTime","useEffect","setInterval","clearInterval","Container","flexDirection","margin","createdAt","Knowme","textAlign","marginTop","App","navbarHeight","Navbar","dark","expand","flexShrink","NavbarBrand","tag","Link","navbar","RRNavLink","position","top","borderRadius","overflow","exact","path","component","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.85accc12.chunk.js","sourcesContent":["import './Code.css';\r\n\r\nfunction Code({ value }) {\r\n  return (\r\n    <pre className=\"code-element\">\r\n      <code>{value}</code>\r\n    </pre>\r\n  );\r\n}\r\n\r\nexport default Code;\r\n","import { createRef, Component } from 'react';\r\nimport { Table } from 'reactstrap';\r\nimport Code from './Code';\r\nimport './Problem.css';\r\nimport 'katex/dist/katex.min.css';\r\nimport renderMathInElement from 'katex/dist/contrib/auto-render';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faExternalLinkAlt } from '@fortawesome/free-solid-svg-icons';\r\n\r\nfunction textArray(ar) {\r\n  return ar.map((paragraph, i) => <p key={i}>{paragraph}</p>);\r\n}\r\n\r\nclass Problem extends Component {\r\n  problemStatement = createRef();\r\n\r\n  componentDidMount() {\r\n    this.componentDidUpdate();\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    if (this.problemStatement.current) {\r\n      renderMathInElement(this.problemStatement.current, {\r\n        delimiters: [\r\n          { left: '$$$$$$', right: '$$$$$$', display: true },\r\n          { left: '$$$', right: '$$$', display: false },\r\n        ],\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { problem } = this.props;\r\n    return (\r\n      problem && (\r\n        <div className=\"problem-area\">\r\n          <div className=\"header\">\r\n            <h2 className=\"title\">\r\n              {problem.title}{' '}\r\n              <a href={problem.link} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                <FontAwesomeIcon icon={faExternalLinkAlt} />\r\n              </a>\r\n            </h2>\r\n            <div className=\"time-limit\">Time limit: {problem.timeLimit}</div>\r\n            <div className=\"memory-limit\">\r\n              Memory limit: {problem.memoryLimit}\r\n            </div>\r\n          </div>\r\n          <div className=\"statement\" ref={this.problemStatement}>\r\n            {textArray(problem.statement.text)}\r\n\r\n            <div className=\"input-spec\">\r\n              <h3 className=\"section-title\">\r\n                Input (<span>{problem.input}</span>)\r\n              </h3>\r\n              {textArray(problem.statement.inputSpec)}\r\n            </div>\r\n\r\n            <div className=\"output-spec\">\r\n              <h3 className=\"section-title\">\r\n                Output (<span>{problem.output}</span>)\r\n              </h3>\r\n              {textArray(problem.statement.outputSpec)}\r\n            </div>\r\n\r\n            {problem.statement.notes.length ? (\r\n              <div className=\"notes\">\r\n                <h3 className=\"section-title\">Notes</h3>\r\n                {textArray(problem.statement.notes)}\r\n              </div>\r\n            ) : null}\r\n          </div>\r\n          {problem.statement.sampleTests.length ? (\r\n            <Table className=\"sample-tests\">\r\n              <thead>\r\n                <tr>\r\n                  <th>Sample Input</th>\r\n                  <th>Sample Output</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {problem.statement.sampleTests.map(({ input, output }, i) => (\r\n                  <tr key={i}>\r\n                    <td>\r\n                      <Code value={input} />\r\n                    </td>\r\n                    <td>\r\n                      <Code value={output} />\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </Table>\r\n          ) : null}\r\n        </div>\r\n      )\r\n    );\r\n  }\r\n}\r\n\r\nexport default Problem;\r\n","function Spacer({ width }) {\r\n  return <span style={{ marginLeft: width || 'auto' }}></span>;\r\n}\r\n\r\nexport default Spacer;\r\n","import { createContext } from 'react';\r\n\r\nconst AceContext = createContext({\r\n  theme: 'dawn',\r\n  keyboardHandler: '',\r\n});\r\n\r\nexport default AceContext;\r\n","import ReactResizeDetector from 'react-resize-detector';\r\nimport AceEditor from 'react-ace';\r\nimport 'ace-builds/src-noconflict/mode-c_cpp';\r\nimport 'ace-builds/src-noconflict/mode-java';\r\nimport 'ace-builds/src-noconflict/mode-python';\r\nimport 'ace-builds/src-noconflict/mode-ruby';\r\nimport 'ace-builds/src-noconflict/theme-monokai';\r\nimport 'ace-builds/src-noconflict/theme-dawn';\r\nimport 'ace-builds/src-noconflict/theme-textmate';\r\nimport 'ace-builds/src-noconflict/theme-solarized_dark';\r\nimport 'ace-builds/src-noconflict/theme-solarized_light';\r\nimport 'ace-builds/src-noconflict/keybinding-vim';\r\nimport 'ace-builds/src-noconflict/keybinding-emacs';\r\nimport 'ace-builds/src-min-noconflict/ext-language_tools';\r\nimport 'ace-builds/src-min-noconflict/ext-searchbox';\r\nimport './Editor.css';\r\nimport AceContext from '../context/AceContext';\r\n\r\nfunction Ace(props) {\r\n  return (\r\n    <ReactResizeDetector handleWidth handleHeight>\r\n      {({ width, height }) => (\r\n        <AceContext.Consumer>\r\n          {(aceProps) => (\r\n            <AceEditor\r\n              mode=\"text\"\r\n              height={`100%/*${height}*/`} // Hack to call resize() properly\r\n              width={`100%/*${width}*/`}\r\n              fontSize={14}\r\n              wrapEnabled={true}\r\n              highlightActiveLine={true}\r\n              setOptions={{\r\n                enableBasicAutocompletion: true,\r\n                enableLiveAutocompletion: true,\r\n                showPrintMargin: false,\r\n                scrollPastEnd: 1.0,\r\n              }}\r\n              editorProps={{ $blockScrolling: Infinity }}\r\n              {...aceProps}\r\n              {...props}\r\n            />\r\n          )}\r\n        </AceContext.Consumer>\r\n      )}\r\n    </ReactResizeDetector>\r\n  );\r\n}\r\n\r\nexport default Ace;\r\n","import { createRef, Component } from 'react';\r\n\r\nclass FileUpload extends Component {\r\n  input = createRef();\r\n  upload = this.upload.bind(this);\r\n  handleChange = this.handleChange.bind(this);\r\n\r\n  upload() {\r\n    const promise = new Promise((resolve, reject) => {\r\n      this.resolve = resolve;\r\n      this.reject = reject;\r\n    });\r\n    this.input.current.click();\r\n    return promise;\r\n  }\r\n\r\n  handleChange() {\r\n    const { files } = this.input.current;\r\n    if (!files.length) return null;\r\n    const file = files[0];\r\n    const reader = new FileReader();\r\n    reader.onload = (event) => this.resolve(event.target.result);\r\n    try {\r\n      reader.readAsText(file);\r\n    } catch (e) {\r\n      this.reject(e);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <input\r\n          type=\"file\"\r\n          style={{ display: 'none' }}\r\n          ref={this.input}\r\n          onChange={this.handleChange}\r\n        />\r\n        {this.props.children(this.upload)}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FileUpload;\r\n","export function download(fileName, content, contentType = 'text/plain') {\r\n  const link = document.createElement('a');\r\n  link.download = fileName;\r\n  const blob = new Blob([content], { type: contentType });\r\n  link.href = window.URL.createObjectURL(blob);\r\n  link.click();\r\n}\r\n\r\nexport function recentWorkspaces() {\r\n  return localStorage.getItem('recentWorkspaces') || '';\r\n}\r\n\r\nexport function addWorkspace(id) {\r\n  const ar = recentWorkspaces()\r\n    .split(',')\r\n    .filter((s) => s);\r\n  if (!ar.includes(id)) {\r\n    ar.push(id);\r\n    localStorage.setItem('recentWorkspaces', ar.join(','));\r\n  }\r\n}\r\n","const languages = {\r\n  50: {\r\n    name: 'C',\r\n    mode: 'c_cpp',\r\n    template: `#include <stdio.h>\r\n\r\nint main(void) {\r\n    // your code here\r\n    return 0;\r\n}\r\n`,\r\n  },\r\n  54: {\r\n    name: 'C++',\r\n    mode: 'c_cpp',\r\n    template: `#include <bits/stdc++.h>\r\nusing namespace std;\r\ntypedef long long ll;\r\n\r\nint main() {\r\n    ios_base::sync_with_stdio(false);\r\n    cin.tie(0);\r\n\r\n    // your code here\r\n    \r\n    return 0;\r\n}\r\n`,\r\n  },\r\n  62: {\r\n    name: 'Java',\r\n    mode: 'java',\r\n    template: `import java.io.*;\r\nimport java.util.*;\r\n\r\npublic class Main {\r\n    public static void main(String[] args) throws IOException {\r\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\r\n        PrintWriter out = new PrintWriter(\r\n            new BufferedWriter(new OutputStreamWriter(System.out)));\r\n\r\n        // your code here\r\n\r\n        out.close();\r\n    }\r\n}\r\n`,\r\n  },\r\n  71: {\r\n    name: 'Python 3',\r\n    mode: 'python',\r\n    template: `# your code here\r\n`,\r\n  },\r\n  72: {\r\n    name: 'Ruby',\r\n    mode: 'ruby',\r\n    template: `# your code here\r\n`,\r\n  },\r\n};\r\n\r\nexport default languages;\r\n","import { Component } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {\r\n  faUpload,\r\n  faShareAlt,\r\n  faDownload,\r\n  faTools,\r\n  faPlay,\r\n  faCheck,\r\n  faPaperPlane,\r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport {\r\n  Button,\r\n  ButtonDropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n} from 'reactstrap';\r\nimport Spacer from './Spacer';\r\nimport Ace from './Ace';\r\nimport FileUpload from './FileUpload';\r\nimport { download } from '../js/utils';\r\nimport languages from '../js/languages';\r\nimport AceContext from '../context/AceContext';\r\n\r\nclass Editor extends Component {\r\n  state = { settingsOpen: false };\r\n  toggleSettings = this.toggleSettings.bind(this);\r\n  handleLanguage = this.handleLanguage.bind(this);\r\n\r\n  toggleSettings() {\r\n    this.setState((state) => ({\r\n      settingsOpen: !state.settingsOpen,\r\n    }));\r\n  }\r\n\r\n  handleLanguage(event) {\r\n    const language = event.target.value;\r\n    this.props.onChange({ language, code: languages[language].template });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"editor-area\">\r\n        <div className=\"editor-menu\">\r\n          <FileUpload>\r\n            {(upload) => (\r\n              <Button\r\n                onClick={async () =>\r\n                  this.props.onChange({ code: await upload() })\r\n                }\r\n              >\r\n                <FontAwesomeIcon icon={faUpload} /> Load\r\n              </Button>\r\n            )}\r\n          </FileUpload>\r\n          <Spacer />\r\n          <Button onClick={() => this.props.onShare()}>\r\n            <FontAwesomeIcon icon={faShareAlt} /> Share\r\n          </Button>\r\n          <Button onClick={() => download('main.cpp', this.props.value.code)}>\r\n            <FontAwesomeIcon icon={faDownload} /> Download\r\n          </Button>\r\n        </div>\r\n\r\n        <Ace\r\n          mode={languages[this.props.value.language].mode}\r\n          value={this.props.value.code}\r\n          onChange={(code) => this.props.onChange({ code })}\r\n        />\r\n\r\n        <div className=\"editor-menu\">\r\n          <ButtonDropdown\r\n            isOpen={this.state.settingsOpen}\r\n            toggle={this.toggleSettings}\r\n            direction=\"up\"\r\n          >\r\n            <DropdownToggle>\r\n              <FontAwesomeIcon icon={faTools} /> Settings\r\n            </DropdownToggle>\r\n            <DropdownMenu className=\"p-4\">\r\n              <AceContext.Consumer>\r\n                {(aceProps) => (\r\n                  <Form style={{ width: 300 }}>\r\n                    <FormGroup className=\"form-row\">\r\n                      <Label\r\n                        className=\"col-4 font-weight-bold\"\r\n                        for=\"language-select\"\r\n                      >\r\n                        Language\r\n                      </Label>\r\n                      <Spacer width={6} />\r\n                      <Input\r\n                        className=\"col\"\r\n                        bsSize=\"sm\"\r\n                        type=\"select\"\r\n                        id=\"language-select\"\r\n                        value={this.props.value.language}\r\n                        onChange={this.handleLanguage}\r\n                      >\r\n                        {Object.entries(languages).map(([id, { name }]) => (\r\n                          <option key={id} value={id}>\r\n                            {name}\r\n                          </option>\r\n                        ))}\r\n                      </Input>\r\n                    </FormGroup>\r\n                    <FormGroup className=\"form-row\">\r\n                      <Label\r\n                        className=\"col-4 font-weight-bold\"\r\n                        for=\"theme-select\"\r\n                      >\r\n                        Theme\r\n                      </Label>\r\n                      <Spacer width={6} />\r\n                      <Input\r\n                        className=\"col\"\r\n                        bsSize=\"sm\"\r\n                        type=\"select\"\r\n                        id=\"theme-select\"\r\n                        value={aceProps.theme}\r\n                        onChange={(event) =>\r\n                          this.props.onAceChange({ theme: event.target.value })\r\n                        }\r\n                      >\r\n                        <option value=\"monokai\">Monokai</option>\r\n                        <option value=\"dawn\">Dawn</option>\r\n                        <option value=\"textmate\">Textmate</option>\r\n                        <option value=\"solarized_dark\">Solarized Dark</option>\r\n                      </Input>\r\n                    </FormGroup>\r\n                    <FormGroup className=\"form-row\">\r\n                      <Label\r\n                        className=\"col-4 font-weight-bold\"\r\n                        for=\"keybinding-select\"\r\n                      >\r\n                        Keybinding\r\n                      </Label>\r\n                      <Spacer width={6} />\r\n                      <Input\r\n                        className=\"col\"\r\n                        bsSize=\"sm\"\r\n                        type=\"select\"\r\n                        id=\"keybinding-select\"\r\n                        value={aceProps.keyboardHandler}\r\n                        onChange={(event) =>\r\n                          this.props.onAceChange({\r\n                            keyboardHandler: event.target.value,\r\n                          })\r\n                        }\r\n                      >\r\n                        <option value=\"\">Default</option>\r\n                      </Input>\r\n                    </FormGroup>\r\n                  </Form>\r\n                )}\r\n              </AceContext.Consumer>\r\n            </DropdownMenu>\r\n          </ButtonDropdown>\r\n          <Spacer />\r\n          <Button disabled={this.props.working} onClick={this.props.onRun}>\r\n            <FontAwesomeIcon icon={faPlay} /> Run\r\n          </Button>\r\n          <Button disabled={this.props.working} onClick={this.props.onTest}>\r\n            <FontAwesomeIcon icon={faCheck} /> Test\r\n          </Button>\r\n          <Button disabled={this.props.working} onClick={this.props.onSubmit}>\r\n            <FontAwesomeIcon icon={faPaperPlane} /> Submit\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Editor;\r\n","import axios from 'axios';\r\n\r\nexport const api = axios.create({ baseURL: '/api/' });\r\nexport const judge = axios.create({\r\n  baseURL: 'https://' + process.env.REACT_APP_RAPIDAPI_HOST,\r\n  headers: {\r\n    'X-RapidAPI-Host': process.env.REACT_APP_RAPIDAPI_HOST,\r\n    'X-RapidAPI-Key': process.env.REACT_APP_RAPIDAPI_KEY,\r\n  },\r\n});\r\n","import { Component } from 'react';\r\nimport Split from 'react-split';\r\nimport {\r\n  TabContent,\r\n  TabPane,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  Table,\r\n  Button,\r\n} from 'reactstrap';\r\nimport Editor from './Editor';\r\nimport { judge, api } from '../js/api';\r\nimport './Workspace.css';\r\nimport Ace from './Ace';\r\nimport Code from './Code';\r\nimport AceContext from '../context/AceContext';\r\n\r\nfunction sleep(ms) {\r\n  return new Promise((resolve) => setTimeout(resolve, ms));\r\n}\r\n\r\nclass Workspace extends Component {\r\n  state = {\r\n    input: '',\r\n    result: null,\r\n    testResults: null,\r\n    working: false,\r\n    tab: 0,\r\n    aceProps: {\r\n      theme: 'solarized_dark',\r\n      keyboardHandler: '',\r\n    },\r\n  };\r\n  runCode = this.runCode.bind(this);\r\n  runTests = this.runTests.bind(this);\r\n  handleSubmit = this.handleSubmit.bind(this);\r\n  handleShare = this.handleShare.bind(this);\r\n  handleAceChange = this.handleAceChange.bind(this);\r\n  tabs = ['Input', 'Output', 'Stderr', 'Compilation', 'Execution', 'Tests'];\r\n\r\n  async run(input, output) {\r\n    const resp = await judge.post('/submissions', {\r\n      source_code: this.props.solution.code,\r\n      language_id: this.props.solution.language,\r\n      stdin: input || null,\r\n      expected_output: output || null,\r\n    });\r\n    const { token } = resp.data;\r\n    while (true) {\r\n      const { data } = await judge.get('/submissions/' + token);\r\n      if (data.status.id > 2)\r\n        // not queued or processing\r\n        return data;\r\n      await sleep(1000);\r\n    }\r\n  }\r\n\r\n  async runCode() {\r\n    this.setState({ working: true });\r\n    try {\r\n      const result = await this.run(this.state.input);\r\n      let tab = 0;\r\n      if (result.status.id <= 4)\r\n        // accepted (or WA)\r\n        tab = 1;\r\n      else if (result.status.id === 6)\r\n        // compilation error\r\n        tab = 3;\r\n      else if (result.status.id <= 12)\r\n        // runtime error or TLE\r\n        tab = 4;\r\n      // internal error\r\n      else alert('An internal error occurred. Please try again.');\r\n      this.setState({ result, tab });\r\n    } catch (e) {\r\n      alert('Error: ' + JSON.stringify(e.response.data));\r\n    } finally {\r\n      this.setState({ working: false });\r\n    }\r\n  }\r\n\r\n  async runTests() {\r\n    if (!this.props.problem)\r\n      return alert('No test cases provided, please select a problem first.');\r\n    const testCases = this.props.problem.statement.sampleTests;\r\n    this.setState({\r\n      testResults: new Array(testCases.length).fill(null),\r\n      tab: 5,\r\n      working: true,\r\n    });\r\n    await Promise.all(\r\n      testCases.map(({ input, output }, index) =>\r\n        this.run(input, output).then((result) => {\r\n          result.input = input;\r\n          this.setState((state) => {\r\n            const testResults = state.testResults.slice();\r\n            testResults[index] = result;\r\n            return { testResults };\r\n          });\r\n        })\r\n      )\r\n    );\r\n    this.setState({ working: false });\r\n  }\r\n\r\n  handleSubmit() {\r\n    if (!this.props.problem)\r\n      return alert('Cannot submit, no problem selected.');\r\n    window.open(this.props.problem.submitLink, '_blank');\r\n  }\r\n\r\n  async handleShare() {\r\n    const { solution } = this.props;\r\n    const resp = await api.post(`/share`, solution);\r\n    if (resp.status === 200) {\r\n      window.open(`/share/${resp.data.id}`, '_blank');\r\n    }\r\n  }\r\n\r\n  handleAceChange(aceProps) {\r\n    this.setState((state) => ({\r\n      aceProps: { ...state.aceProps, ...aceProps },\r\n    }));\r\n  }\r\n\r\n  setTab(tab) {\r\n    this.setState({ tab });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <AceContext.Provider value={this.state.aceProps}>\r\n        <Split\r\n          direction=\"vertical\"\r\n          sizes={[70, 30]}\r\n          minSize={[100, 0]}\r\n          gutterSize={4}\r\n        >\r\n          <Editor\r\n            value={this.props.solution}\r\n            onChange={this.props.onChange}\r\n            onRun={this.runCode}\r\n            onTest={this.runTests}\r\n            onSubmit={this.handleSubmit}\r\n            onShare={this.handleShare}\r\n            onAceChange={this.handleAceChange}\r\n            working={this.state.working}\r\n          />\r\n          <div className=\"results-view\">\r\n            <TabContent activeTab={this.state.tab}>\r\n              <TabPane tabId={0}>\r\n                <Ace\r\n                  value={this.state.input}\r\n                  onChange={(input) => this.setState({ input })}\r\n                />\r\n              </TabPane>\r\n              <TabPane tabId={1}>\r\n                <Ace\r\n                  value={(this.state.result && this.state.result.stdout) || ''}\r\n                  readOnly={true}\r\n                />\r\n              </TabPane>\r\n              <TabPane tabId={2}>\r\n                <Ace\r\n                  value={(this.state.result && this.state.result.stderr) || ''}\r\n                  readOnly={true}\r\n                />\r\n              </TabPane>\r\n              <TabPane tabId={3}>\r\n                {this.state.result && (\r\n                  <div className=\"p-2\">\r\n                    {this.state.result.status.id !== 6 ? (\r\n                      <b>Compilation successful.</b>\r\n                    ) : (\r\n                      <>\r\n                        <b>Compilation error:</b>\r\n                        <Code value={this.state.result.compile_output} />\r\n                      </>\r\n                    )}\r\n                  </div>\r\n                )}\r\n              </TabPane>\r\n              <TabPane tabId={4}>\r\n                {this.state.result && (\r\n                  <div className=\"p-2\">\r\n                    <p>\r\n                      <b>Time:</b>{' '}\r\n                      {this.state.result.time == null\r\n                        ? '-'\r\n                        : Math.floor(this.state.result.time * 1000) + ' ms'}\r\n                    </p>\r\n                    <p>\r\n                      <b>Memory:</b>{' '}\r\n                      {this.state.result.memory == null\r\n                        ? '-'\r\n                        : this.state.result.memory + ' KB'}\r\n                    </p>\r\n                    <p>\r\n                      <b>Verdict:</b> {this.state.result.status.description}\r\n                    </p>\r\n                  </div>\r\n                )}\r\n              </TabPane>\r\n              <TabPane tabId={5}>\r\n                {this.state.testResults && (\r\n                  <Table className=\"results-table\" hover={true}>\r\n                    <thead>\r\n                      <tr>\r\n                        <th>#</th>\r\n                        <th>Verdict</th>\r\n                        <th>Time</th>\r\n                        <th>Memory</th>\r\n                        <th>Data</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {this.state.testResults.map(\r\n                        (result, i) =>\r\n                          result && (\r\n                            <tr key={i}>\r\n                              <td>{i}</td>\r\n                              <td>{result.status.description}</td>\r\n                              <td>\r\n                                {result.time == null\r\n                                  ? '-'\r\n                                  : Math.floor(result.time * 1000) + ' ms'}\r\n                              </td>\r\n                              <td>\r\n                                {result.memory == null\r\n                                  ? '-'\r\n                                  : result.memory + ' KB'}\r\n                              </td>\r\n                              <td>\r\n                                <Button\r\n                                  size=\"sm\"\r\n                                  onClick={() =>\r\n                                    this.setState({\r\n                                      tab: 0,\r\n                                      input: result.input,\r\n                                    })\r\n                                  }\r\n                                >\r\n                                  Load\r\n                                </Button>\r\n                              </td>\r\n                            </tr>\r\n                          )\r\n                      )}\r\n                    </tbody>\r\n                  </Table>\r\n                )}\r\n              </TabPane>\r\n            </TabContent>\r\n            <Nav tabs>\r\n              {this.tabs.map((tabName, i) => (\r\n                <NavItem key={i}>\r\n                  <NavLink\r\n                    className={this.state.tab === i ? 'active' : ''}\r\n                    onClick={() => this.setTab(i)}\r\n                  >\r\n                    {tabName}\r\n                  </NavLink>\r\n                </NavItem>\r\n              ))}\r\n            </Nav>\r\n          </div>\r\n        </Split>\r\n      </AceContext.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Workspace;\r\n","import { Component } from 'react';\r\nimport { Form, Input, Button, Spinner } from 'reactstrap';\r\nimport Spacer from '../components/Spacer';\r\nimport { api } from '../js/api';\r\n\r\nclass ProblemSelect extends Component {\r\n  state = {\r\n    problemId: '',\r\n    loading: false,\r\n  };\r\n  handleChange = this.handleChange.bind(this);\r\n  handleSubmit = this.handleSubmit.bind(this);\r\n\r\n  handleChange(event) {\r\n    this.setState({ problemId: event.target.value });\r\n  }\r\n\r\n  async handleSubmit(event) {\r\n    event.preventDefault();\r\n    this.setState({ loading: true });\r\n    try {\r\n      const { data } = await api.post('/workspace', {\r\n        type: 'CF',\r\n        id: this.state.problemId,\r\n      });\r\n      this.props.onChange(data);\r\n    } catch (e) {\r\n      alert('Error: ' + JSON.stringify(e.response.data));\r\n    } finally {\r\n      this.setState({ loading: false });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Form onSubmit={this.handleSubmit} className=\"d-flex w-100\">\r\n        <Input\r\n          bsSize=\"sm\"\r\n          autoFocus\r\n          placeholder=\"Codeforces Problem ID\"\r\n          value={this.state.problemId}\r\n          onChange={this.handleChange}\r\n        />\r\n        <Spacer width={6} />\r\n        <Button size=\"sm\" color='primary' disabled={this.state.loading}>\r\n          {this.state.loading ? <Spinner size=\"sm\" /> : 'Parse'}\r\n        </Button>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProblemSelect;\r\n","import { Component } from 'react';\r\nimport Split from 'react-split';\r\nimport { Spinner } from 'reactstrap';\r\nimport Problem from '../components/Problem';\r\nimport './WorkspacePage.css';\r\nimport Workspace from '../components/Workspace';\r\nimport { api } from '../js/api';\r\nimport languages from '../js/languages';\r\nimport debounce from 'lodash/debounce';\r\nimport { addWorkspace } from '../js/utils';\r\nimport ProblemSelect from '../components/ProblemSelect';\r\n\r\nconst defaultLanguage = 54;\r\n\r\nfunction defaultSolution(language = defaultLanguage) {\r\n  return {\r\n    language,\r\n    code: languages[language].template,\r\n  };\r\n}\r\n\r\nclass WorkspacePage extends Component {\r\n  state = {\r\n    problem: null,\r\n    solution: defaultSolution(),\r\n    loading: false,\r\n  };\r\n  loadState = this.loadState.bind(this);\r\n  handleWorkspaceChange = this.handleWorkspaceChange.bind(this);\r\n  workspaceSaveDebounced = debounce(this.workspaceSave, 1000);\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    if (props.match.params.id) this.state.loading = true;\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    if (id) {\r\n      api.get(`/workspace/${id}`).then(({ data }) => {\r\n        this.loadState(data);\r\n        this.setState({ loading: false });\r\n      });\r\n    }\r\n  }\r\n\r\n  loadState(data) {\r\n    addWorkspace(data.id);\r\n    if (data.id !== this.props.match.params.id)\r\n      this.props.history.push(`/workspace/${data.id}`);\r\n    if (data.solution == null) data.solution = defaultSolution();\r\n    this.setState({\r\n      problem: data.problem,\r\n      solution: data.solution,\r\n    });\r\n  }\r\n\r\n  handleWorkspaceChange(value) {\r\n    this.setState((state) => ({\r\n      solution: { ...state.solution, ...value },\r\n    }));\r\n    this.workspaceSaveDebounced();\r\n  }\r\n\r\n  workspaceSave() {\r\n    if (this.props.match.params.id)\r\n      api.put(\r\n        `/workspace/${this.props.match.params.id}/save`,\r\n        this.state.solution\r\n      );\r\n  }\r\n\r\n  render() {\r\n    if (this.state.loading) {\r\n      return (\r\n        <div className=\"d-flex h-100 align-items-center justify-content-center\">\r\n          <Spinner style={{ width: '3rem', height: '3rem' }} type=\"grow\" />\r\n        </div>\r\n      );\r\n    }\r\n    return (\r\n      <Split\r\n        direction=\"horizontal\"\r\n        sizes={[50, 50]}\r\n        minSize={0}\r\n        snapOffset={400}\r\n        gutterSize={12}\r\n        className=\"split-parent-horizontal\"\r\n      >\r\n        <div className=\"problem-pane\">\r\n          <div className=\"problem-select\">\r\n            <ProblemSelect onChange={this.loadState} />\r\n          </div>\r\n          <Problem problem={this.state.problem} />\r\n        </div>\r\n        <Workspace\r\n          problem={this.state.problem}\r\n          solution={this.state.solution}\r\n          onChange={this.handleWorkspaceChange}\r\n        />\r\n      </Split>\r\n    );\r\n  }\r\n}\r\n\r\nexport default WorkspacePage;\r\n","import { Component } from 'react';\r\nimport { api } from '../js/api';\r\nimport languages from '../js/languages';\r\nimport { recentWorkspaces } from '../js/utils';\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardTitle,\r\n  CardSubtitle,\r\n  CardText,\r\n  Button,\r\n  Spinner,\r\n} from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport moment from 'moment';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport Spacer from '../components/Spacer';\r\n\r\nclass IndexPage extends Component {\r\n  state = { recent: null };\r\n\r\n  async componentDidMount() {\r\n    const { data } = await api.get(`/workspace?ids=${recentWorkspaces()}`);\r\n    this.setState({ recent: data });\r\n  }\r\n\r\n  async remove(id) {\r\n    const resp = await api.delete(`/workspace/${id}`);\r\n    if (resp.status === 200) {\r\n      this.setState((state) => ({\r\n        recent: state.recent.filter((obj) => obj.id !== id),\r\n      }));\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"p-4 h-100\" style={{ overflowY: 'auto' }}>\r\n        <h1>Welcome!</h1>\r\n        <div className=\"d-flex flex-wrap\">\r\n          {this.state.recent ? (\r\n            this.state.recent.length ? (\r\n              this.state.recent.map((workspace) => (\r\n                <Card\r\n                  key={workspace.id}\r\n                  className=\"m-2\"\r\n                  style={{ flexBasis: '250px' }}\r\n                >\r\n                  <CardBody>\r\n                    <CardTitle className=\"font-weight-bold\">\r\n                      {workspace.problem.title}\r\n                    </CardTitle>\r\n                    <CardSubtitle className=\"font-italic\">\r\n                      {moment(workspace.updatedAt).fromNow()}\r\n                    </CardSubtitle>\r\n                    <CardText>\r\n                      {workspace.solution &&\r\n                        (languages[workspace.solution.language] || {}).name}\r\n                    </CardText>\r\n                    <Link to={`/workspace/${workspace.id}`}>\r\n                      <Button color='primary'>Open</Button>\r\n                    </Link>\r\n                    <Spacer width={6} />\r\n                    <Button\r\n                      color=\"danger\"\r\n                      onClick={() => this.remove(workspace.id)}\r\n                    >\r\n                      <FontAwesomeIcon icon={faTrashAlt} />\r\n                    </Button>\r\n                  </CardBody>\r\n                </Card>\r\n              ))\r\n            ) : (\r\n              <p>\r\n                No recent workspaces. Why not{' '}\r\n                <Link to=\"/workspace\">create one</Link>?\r\n              </p>\r\n            )\r\n          ) : (\r\n            <Spinner type=\"grow\" className=\"m-2\" />\r\n          )}\r\n        </div>\r\n        <footer className='copyright-footer'>\r\n          Copyright &copy; created by - {' '}\r\n          <a href='https://www.linkedin.com/in/rishabh-kothari-4b6248190/'>\r\n          Rishabh Kothari\r\n          </a>\r\n        </footer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default IndexPage;\r\n","import { useState, useEffect } from 'react';\r\nimport { Container, Spinner } from 'reactstrap';\r\nimport moment from 'moment';\r\nimport Ace from '../components/Ace';\r\nimport { api } from '../js/api';\r\nimport languages from '../js/languages';\r\n\r\nfunction SharePage({ match }) {\r\n  const { id } = match.params;\r\n  const [share, setShare] = useState(null);\r\n  const [time, setTime] = useState(moment());\r\n\r\n  useEffect(() => {\r\n    const id = setInterval(() => setTime(moment()), 5000);\r\n    return () => clearInterval(id);\r\n  });\r\n\r\n  useEffect(() => {\r\n    api.get(`/share/${id}`).then((resp) => {\r\n      if (resp.status === 200) {\r\n        setShare(resp.data);\r\n      }\r\n    });\r\n  }, [id]);\r\n\r\n  if (!share) {\r\n    return (\r\n      <div className=\"d-flex h-100 align-items-center justify-content-center\">\r\n        <Spinner style={{ width: '3rem', height: '3rem' }} type=\"grow\" />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Container\r\n      style={{ height: '100%', display: 'flex', flexDirection: 'column' }}\r\n    >\r\n      <div style={{ margin: '8px 0' }}>\r\n        Code shared: <strong>{time.to(share.createdAt)}</strong>\r\n      </div>\r\n      <Ace\r\n        mode={(languages[share.solution.language] || {}).mode}\r\n        value={share.solution.code}\r\n        readOnly\r\n      />\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default SharePage;\r\n","import React from 'react'\r\n\r\nconst Knowme = () => {\r\n    return (\r\n        <div>\r\n           <h2 style={{textAlign:'center',margin:'10px'}}>Hello !! Welcome to CODE WORKSPACE!!</h2>\r\n           <div>\r\n               <ul className=\"know-me\">\r\n                   <li>\r\n                       <h4>What is Code Workspace ?</h4>\r\n                       <ul>\r\n                           <li>\r\n                                <p>This is a coding platform which you can use to solve coding problems.</p>\r\n                           </li>\r\n                           <li>\r\n                                <p>The platform has a advanced code editor which will help you to code faster. </p>\r\n                           </li>\r\n                           <li>\r\n                                <p>You can use this during a competitve programming contest. You can grab the question and can test your code with custom input.</p>\r\n                           </li>\r\n                           <li>\r\n                                 <p>You can also save your code templates if you wish to revisit them.</p>\r\n                           </li>\r\n                       </ul>\r\n                    </li>\r\n                   <li style={{marginTop:'10px'}}>\r\n                       <h4>How to use it ?</h4>\r\n                       <ul>\r\n                           <li>\r\n                                <p>Go to the <b>Viewer</b> section. Now this is our coding platform.</p>\r\n                           </li>\r\n                           <li>\r\n                                <p>Just Type the problem id of the question from the contest and click on the Parse Button.</p>\r\n                                <p>eg. 1400A - where 1400 is the Contest Number and A is the problem id.</p>\r\n                           </li>\r\n                       </ul>\r\n                    </li>\r\n               </ul>\r\n               \r\n           </div>\r\n           <footer className='copyright-footer'>\r\n          Copyright &copy; created by - {' '}\r\n          <a href='https://www.linkedin.com/in/rishabh-kothari-4b6248190/'>\r\n          Rishabh Kothari\r\n          </a>\r\n        </footer>\r\n        </div> \r\n    )\r\n}\r\n\r\nexport default Knowme\r\n","import { Component } from 'react';\r\nimport {Button} from 'reactstrap'\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Switch,\r\n  Redirect,\r\n  Link,\r\n  NavLink as RRNavLink,\r\n} from 'react-router-dom';\r\nimport { Navbar, NavbarBrand, Nav, NavItem, NavLink } from 'reactstrap';\r\nimport WorkspacePage from './pages/WorkspacePage';\r\nimport IndexPage from './pages/IndexPage';\r\nimport SharePage from './pages/SharePage';\r\nimport Knowme from './pages/Knowme';\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    const navbarHeight = '56px';\r\n    return (\r\n      <Router>\r\n        <>\r\n          <Navbar\r\n            color=\"dark\"\r\n            dark\r\n            expand=\"md\"\r\n            style={{ flexShrink: 0, height: navbarHeight }}\r\n          >\r\n            <NavbarBrand tag={Link} to=\"/\">\r\n              Workspace\r\n            </NavbarBrand>\r\n            <Nav navbar>\r\n              <NavItem>\r\n                <NavLink tag={RRNavLink} to=\"/workspace\">\r\n                  Viewer\r\n                </NavLink>\r\n              </NavItem>\r\n              <NavItem style={{position:'absolute',right:'0%',top:'7%'}}>\r\n                <NavLink tag={RRNavLink} to=\"/knowme\">\r\n                  <Button style={{borderRadius:'45%'}} color=\"outline-light\">?</Button>\r\n                </NavLink>\r\n              </NavItem>\r\n            </Nav>\r\n          </Navbar>\r\n          <div\r\n            style={{ height: `calc(100% - ${navbarHeight})`, overflow: 'none' }}\r\n          >\r\n            <Switch>\r\n              <Route exact path=\"/\" component={IndexPage} />\r\n              <Route exact path=\"/workspace\" component={WorkspacePage} />\r\n              <Route exact path=\"/knowme\" component={Knowme}/>\r\n              <Route exact path=\"/workspace/:id\" component={WorkspacePage} />\r\n              <Route exact path=\"/share/:id\" component={SharePage} />\r\n              <Redirect to=\"/\" />\r\n            </Switch>\r\n          </div>\r\n        </>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}